// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelApi.Models;

namespace TravelApi.Migrations
{
    [DbContext(typeof(TravelApiContext))]
    [Migration("20200128231835_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelApi.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorName");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Trevor Mackin"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Uriel Gonzalez"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Review");

                    b.HasKey("LocationId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            AuthorId = 1,
                            City = "Seattle",
                            Country = "USA",
                            Review = "Rainy"
                        },
                        new
                        {
                            LocationId = 2,
                            AuthorId = 2,
                            City = "Pheonix",
                            Country = "USA",
                            Review = "Hot"
                        });
                });

            modelBuilder.Entity("TravelApi.Models.Location", b =>
                {
                    b.HasOne("TravelApi.Models.Author", "Author")
                        .WithMany("Locations")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
